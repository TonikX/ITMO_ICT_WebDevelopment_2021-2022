# Generated by Django 3.1.5 on 2021-01-22 17:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('fio', models.CharField(max_length=100, verbose_name='ФИО')),
                ('age', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(18)], verbose_name='Возраст')),
                ('education', models.CharField(choices=[('VSH', 'Высшее'), ('VSN', 'Высшее неоконченное'), ('SRD', 'Среднее'), ('SRS', 'Среднее специальное')], max_length=3, verbose_name='уровень образования')),
                ('stajh_raboty', models.IntegerField(verbose_name='Стаж работы')),
                ('passport', models.CharField(max_length=10, verbose_name='Паспортные данные')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ekipazh',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=20, verbose_name='Название экипажа')),
            ],
        ),
        migrations.CreateModel(
            name='Plane',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=15, verbose_name='Тип')),
                ('number', models.CharField(max_length=8, verbose_name='Номер модели')),
                ('mesta', models.IntegerField(verbose_name='Количество мест')),
                ('speed', models.IntegerField(verbose_name='Скорость полёта (км/ч)')),
                ('avia', models.CharField(max_length=20, verbose_name='Авиакомпания')),
            ],
        ),
        migrations.CreateModel(
            name='Tranzit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('punkt_peresadki', models.CharField(max_length=20, verbose_name='Пункт пересадки')),
            ],
        ),
        migrations.CreateModel(
            name='Reys',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('distance', models.IntegerField(verbose_name='Расстояние до пункта назначения')),
                ('punkt_start', models.CharField(max_length=20, verbose_name='Пункт вылета')),
                ('punkt_end', models.CharField(max_length=20, verbose_name='Пункт прилёта')),
                ('id_tranzita', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='airport.tranzit', verbose_name='ID транзита')),
            ],
        ),
        migrations.CreateModel(
            name='Remont',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('polomka', models.CharField(max_length=100, verbose_name='Поломка')),
                ('id_plane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.plane', verbose_name='ID самолёта')),
            ],
        ),
        migrations.CreateModel(
            name='Razrechenie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razrechenie', models.BooleanField(default=True)),
                ('id_ekipazha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.ekipazh', verbose_name='ID экипажа')),
                ('id_plane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.plane', verbose_name='ID самолёта')),
            ],
        ),
        migrations.CreateModel(
            name='Polet',
            fields=[
                ('id_poleta', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('date_start', models.DateField(verbose_name='Дата вылета')),
                ('time_start', models.TimeField(verbose_name='Время вылета')),
                ('date_end', models.DateField(verbose_name='Дата прилёта')),
                ('time_end', models.TimeField(verbose_name='Время прилёта')),
                ('sell_tickets', models.IntegerField(verbose_name='Количество проданных билетов')),
                ('made_reys', models.IntegerField(verbose_name='Количество совершённых рейсов')),
                ('date_start_tranzit', models.DateField(verbose_name='Дата транзитной посадки')),
                ('time_start_tranzit', models.TimeField(verbose_name='Время транзитной посадки')),
                ('date_end_tranzit', models.DateField(verbose_name='Дата вылета из транзита')),
                ('time_end_tranzit', models.TimeField(verbose_name='Время вылета из транзита')),
                ('id_plane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.plane', verbose_name='ID самолёта')),
                ('nubmer_reysa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.reys', verbose_name='Номер рейса')),
            ],
        ),
        migrations.CreateModel(
            name='Dopusk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nalichie_dopuska', models.BooleanField(default=True)),
                ('id_ekipazha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.ekipazh', verbose_name='ID экипажа')),
                ('number_reysa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.reys', verbose_name='Номер рейса')),
            ],
        ),
        migrations.CreateModel(
            name='Aviacompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.CharField(max_length=30, verbose_name='Занимаемая должность')),
                ('id_ekipazha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airport.ekipazh', verbose_name='ID экипажа')),
                ('id_workera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ID работника')),
            ],
        ),
        migrations.AddField(
            model_name='worker',
            name='work',
            field=models.ManyToManyField(through='airport.Aviacompany', to='airport.Ekipazh'),
        ),
    ]
