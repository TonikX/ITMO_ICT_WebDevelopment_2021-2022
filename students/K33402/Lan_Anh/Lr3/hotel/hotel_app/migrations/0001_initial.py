# Generated by Django 4.0 on 2021-12-26 02:37

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HotelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(default='', max_length=10, verbose_name='Sex')),
                ('phone', models.IntegerField(default='0', verbose_name='Phone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='Name of Hotel')),
                ('address', models.CharField(default='', max_length=100, verbose_name='Address')),
                ('description', models.CharField(default='', max_length=200, verbose_name='Hotel description')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('hoteluser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hotel_app.hoteluser')),
                ('license', models.CharField(choices=[('I', 'Certificate I'), ('II', 'Certificate II'), ('III', 'Certificate III'), ('IV', 'Certificate IV')], max_length=20, verbose_name='License')),
                ('workExp', models.IntegerField(default='0', verbose_name='Work Experience')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('hotel_app.hoteluser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('hoteluser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hotel_app.hoteluser')),
                ('birthday', models.DateField(default=django.utils.timezone.now, verbose_name='Visitor Birthday')),
                ('nationality', models.CharField(default='', max_length=20, verbose_name='Nationality')),
                ('passport_no', models.CharField(max_length=20, verbose_name='Passport number')),
                ('visitor_type', models.CharField(choices=[('A', 'adult'), ('C', 'children')], max_length=1, verbose_name='Visitor types')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('hotel_app.hoteluser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default='0', verbose_name='Number')),
                ('price', models.IntegerField(default='0', verbose_name='Price')),
                ('state', models.CharField(default='', max_length=500, verbose_name='State')),
                ('id_hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel_app.hotel', verbose_name='Hotel Id')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_code', models.CharField(max_length=10, verbose_name='Booking Code')),
                ('date_checkin', models.DateField(default=django.utils.timezone.now, verbose_name='Date Checkin')),
                ('date_checkout', models.DateField(default=django.utils.timezone.now, verbose_name='Date Checkout')),
                ('id_room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hotel_app.room', verbose_name='Room Id')),
                ('id_main_guest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hotel_app.visitor', verbose_name='Guest Id')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100, verbose_name='Service Name')),
                ('description', models.CharField(default='', max_length=500, verbose_name='Description')),
                ('id_booking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hotel_app.booking', verbose_name='Booking Id')),
            ],
        ),
        migrations.AddField(
            model_name='hotel',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotel_app.host', verbose_name='Hotel Owner'),
        ),
    ]
